<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.musicserver.mapper.SingerMapper">


        <select id="queryAllSinger" parameterType="int" resultMap="BaseSingerMap">
              select *  from singer limit #{startIndex},#{pageSize}
        </select>

        <resultMap id="BaseSingerMap" type="Singer">
            <result property="singerId" column="singer_id"/>
            <result property="singerName" column="singer_name"/>
            <result property="singerDetails" column="singer_details"/>
            <result property="singerPhoto" column="singer_photo"/>

        </resultMap>

        <select id="querySingerByName" resultMap="BaseSingerMap">
            select *  from singer where singer_name  like CONCAT('%',#{singerName},'%')
        </select>

    <select id="SingerByName" resultType="int">
        select count(*)  from singer where singer_name=#{singerName}
    </select>

        <select id="countOfSinger" resultType="int">
              select count(*) from singer
        </select>

        <select id="querySingerByType" parameterType="int" resultMap="BaseSingerMap">
              select *  from singer where singer_type=#{singerType} limit #{startIndex},#{pageSize}
        </select>

        <select id="countOfSingerByType" resultType="int" parameterType="int">
              select count(*) from singer where singer_type=#{singerType}
        </select>

<!--    随机-->
        <select id="topSinger" resultMap="BaseSingerMap">
              SELECT * FROM singer ORDER BY RAND() LIMIT 10;
        </select>

        <select id="querySingerById" resultMap="BaseSingerMap" parameterType="int">
            select * from singer where singer_id=#{singer_id}
        </select>

    <select id="IdSingerByName" resultMap="BaseSingerMap">
        select * from singer where singer_name=#{singerName}
    </select>

        <insert id="addSinger">
            insert into singer(singer_name) values (#{singerName})
        </insert>

        <update id="putSinger" parameterType="Singer">
            update singer set singer_name=#{singerName},singer_details=#{singerDetails},singer_photo=#{singerPhoto} where singer_id=#{singerId}
        </update>

        <delete id="delSinger" parameterType="int">
            delete from singer where singer_id=#{singerId}
        </delete>



</mapper>





